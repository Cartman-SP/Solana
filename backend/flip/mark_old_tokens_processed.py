import os
import sys
import django
from datetime import datetime, timedelta
from django.utils import timezone
from django.db.models import Q

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from mainapp.models import Token


def mark_old_tokens_processed():
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç processed = True –≤—Å–µ–º —Ç–æ–∫–µ–Ω–∞–º:
    1. –°—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤ (–≤—Å–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç community_id)
    2. –ë–µ–∑ community_id (–≤—Å–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞)
    """
    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è 40 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
    cutoff_time = timezone.now() - timedelta(hours=40)
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:
    # 1. –°—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤ (–≤—Å–µ)
    # 2. –ë–µ–∑ community_id (–≤—Å–µ)
    tokens_to_update = Token.objects.filter(
        Q(created_at__lt=cutoff_time) | Q(community_id__isnull=True),
        processed=False
    ).distinct()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    count = tokens_to_update.count()
    
    if count == 0:
        print("–ù–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        return
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    old_tokens_count = Token.objects.filter(
        created_at__lt=cutoff_time,
        processed=False
    ).count()
    
    no_community_count = Token.objects.filter(
        community_id__isnull=True,
        processed=False
    ).count()
    
    print(f"–ù–∞–π–¥–µ–Ω–æ {count} —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    print(f"- –°—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤: {old_tokens_count} —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"- –ë–µ–∑ community_id: {no_community_count} —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—Å —É—á–µ—Ç–æ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π): {count} —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"- –í—Ä–µ–º—è –æ—Ç—Å–µ—á–µ–Ω–∏—è: {cutoff_time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ç–æ–∫–µ–Ω–æ–≤
    sample_tokens = tokens_to_update[:5]
    print(f"\n–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–∫–µ–Ω–æ–≤:")
    for token in sample_tokens:
        age_hours = (timezone.now() - token.created_at).total_seconds() / 3600
        has_community = "–î–∞" if token.community_id else "–ù–µ—Ç"
        print(f"  - {token.address}")
        print(f"    –í–æ–∑—Ä–∞—Å—Ç: {age_hours:.1f} —á–∞—Å–æ–≤")
        print(f"    Community ID: {has_community}")
        print(f"    –°–æ–∑–¥–∞–Ω: {token.created_at.strftime('%Y-%m-%d %H:%M:%S')}")
        print()
    
    if count > 5:
        print(f"  ... –∏ –µ—â–µ {count - 5} —Ç–æ–∫–µ–Ω–æ–≤")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input(f"\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ {count} —Ç–æ–∫–µ–Ω–æ–≤? (y/N): ")
    
    if response.lower() != 'y':
        print("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    try:
        updated_count = tokens_to_update.update(processed=True)
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ç–æ–∫–µ–Ω–æ–≤!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_tokens = Token.objects.count()
        processed_tokens = Token.objects.filter(processed=True).count()
        unprocessed_tokens = Token.objects.filter(processed=False).count()
        
        print(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"- –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {total_tokens}")
        print(f"- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ (processed=True): {processed_tokens}")
        print(f"- –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ (processed=False): {unprocessed_tokens}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")


def show_token_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–æ–∫–µ–Ω–∞–º"""
    total_tokens = Token.objects.count()
    processed_tokens = Token.objects.filter(processed=True).count()
    unprocessed_tokens = Token.objects.filter(processed=False).count()
    
    # –¢–æ–∫–µ–Ω—ã –±–µ–∑ community_id
    no_community_tokens = Token.objects.filter(community_id__isnull=True).count()
    
    # –¢–æ–∫–µ–Ω—ã —Å—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤
    cutoff_time = timezone.now() - timedelta(hours=40)
    old_tokens = Token.objects.filter(created_at__lt=cutoff_time).count()
    
    # –¢–æ–∫–µ–Ω—ã —Å—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤ –±–µ–∑ community_id –∏ processed=False
    target_tokens = Token.objects.filter(
        Q(created_at__lt=cutoff_time) | Q(community_id__isnull=True),
        processed=False
    ).distinct().count()
    
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:")
    print(f"- –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {total_tokens}")
    print(f"- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ (processed=True): {processed_tokens}")
    print(f"- –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ (processed=False): {unprocessed_tokens}")
    print(f"- –ë–µ–∑ community_id: {no_community_tokens}")
    print(f"- –°—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤: {old_tokens}")
    print(f"- –¶–µ–ª–µ–≤—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {target_tokens}")


if __name__ == "__main__":
    print("üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ processed = True —Ç–æ–∫–µ–Ω–∞–º")
    print("=" * 60)
    print("–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ —Ç–æ–∫–µ–Ω—ã —Å—Ç–∞—Ä—à–µ 40 —á–∞—Å–æ–≤ –ò –≤—Å–µ —Ç–æ–∫–µ–Ω—ã –±–µ–∑ community_id")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_token_statistics()
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mark_old_tokens_processed() 